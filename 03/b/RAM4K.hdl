// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, a=ina, b=inb, c=inc, d=ind, e=ine, f=inf, g=ing, h=inh, sel=address[9..11]);
    RAM512(in=in, address=address[0..8], load=ina, out=outa);
    RAM512(in=in, address=address[0..8], load=inb, out=outb);
    RAM512(in=in, address=address[0..8], load=inc, out=outc);
    RAM512(in=in, address=address[0..8], load=ind, out=outd);
    RAM512(in=in, address=address[0..8], load=ine, out=oute);
    RAM512(in=in, address=address[0..8], load=inf, out=outf);
    RAM512(in=in, address=address[0..8], load=ing, out=outg);
    RAM512(in=in, address=address[0..8], load=inh, out=outh);
    Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh, sel=address[9..11], out=out);
}
